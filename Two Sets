import java.io.*;

public class Main {
    public static void main(String[] args) throws Exception {
        FastIO scan = new FastIO(System.in);
        BufferedWriter bufferedWriter = new BufferedWriter(new OutputStreamWriter(System.out));
        StringBuilder set1 = new StringBuilder();
        StringBuilder set2 = new StringBuilder();
        long amo = scan.nextLong();
        long sum = (amo * (amo + 1)) / 2;
        if (sum % 2 == 0) {
            bufferedWriter.write("YES\n");
            long avg = sum / 2;
            int count = 0;
            for (long i = amo; i >=1; i--) {
                if (avg-i >= 0) {
                    avg -= i;
                    count++;
                    set1.append(i).append(" ");
                } else {
                    set2.append(i).append(" ");
                }
            }
            bufferedWriter.write(count + "\n");
            bufferedWriter.write(set1 + "\n");
            bufferedWriter.write((amo - count) + "\n");
            bufferedWriter.write(set2 + "\n");

        } else
            bufferedWriter.write("NO\n");

        bufferedWriter.flush();
        bufferedWriter.close();
    }

    public static class FastIO {
        InputStream dis;
        byte[] buffer = new byte[1 << 17];
        int pointer = 0;

        public FastIO(String fileName) throws Exception {
            dis = new FileInputStream(fileName);
        }

        public FastIO(InputStream is) {
            dis = is;
        }

        int nextInt() throws Exception {
            int ret = 0;
            byte b;
            do {
                b = nextByte();
            } while (b <= ' ');
            boolean negative = false;
            if (b == '-') {
                negative = true;
                b = nextByte();
            }
            while (b >= '0' && b <= '9') {
                ret = 10 * ret + b - '0';
                b = nextByte();
            }
            return (negative) ? -ret : ret;
        }

        long nextLong() throws Exception {
            long ret = 0;
            byte b;
            do {
                b = nextByte();
            } while (b <= ' ');
            boolean negative = false;
            if (b == '-') {
                negative = true;
                b = nextByte();
            }
            while (b >= '0' && b <= '9') {
                ret = 10 * ret + b - '0';
                b = nextByte();
            }
            return (negative) ? -ret : ret;
        }

        Integer[] readArray(int n) throws Exception {
            Integer[] a = new Integer[n];
            for (int i = 0; i < n; i++) a[i] = nextInt();
            return a;
        }

        byte nextByte() throws Exception {
            if (pointer == buffer.length) {
                dis.read(buffer, 0, buffer.length);
                pointer = 0;
            }
            return buffer[pointer++];
        }

        String next() throws Exception {
            StringBuilder ret = new StringBuilder();
            byte b;
            do {
                b = nextByte();
            } while (b <= ' ');
            while (b > ' ') {
                ret.appendCodePoint(b);
                b = nextByte();
            }
            return ret.toString();
        }

        public void close() throws Exception {
            if (dis == null) return;
            dis.close();
        }
    }

}
